# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
name: "Coverity Scan"

on: [workflow_dispatch]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        # Override automatic language detection by changing the below list
        # Supported options are ['csharp', 'cpp', 'go', 'java', 'javascript', 'python']
        language: ['cpp']
        # Learn more...
        # https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/configuring-code-scanning#overriding-automatic-language-detection

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}
      
    - run: git submodule update --init --recursive
          
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.2.1'
        
    - run: sudo apt install wget curl
    
    - name: Download Coverity Build Tool
      run: |
        wget -q https://scan.coverity.com/download/cxx/linux64 --post-data "token=$TOKEN&project=igormironchik%2Fargs-parser" -O cov-analysis-linux64.tar.gz
        mkdir cov-analysis-linux64
        tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
      env:
        TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
        
    - name: Run CMake
      run: |
        cmake .
        
    - name: Build with cov-build
      run: |
        export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
        cov-build --dir cov-int make
          
    - name: Submit the result to Coverity Scan
      run: |
        tar czvf args-parser.tgz cov-int
        curl \
          --form token=$TOKEN \
          --form email=igor.mironchik@gmail.com \
          --form file=@args-parser.tgz \
          --form version="master" \
          --form description="" \
          https://scan.coverity.com/builds?project=igormironchik%2Fargs-parser
      env:
        TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
